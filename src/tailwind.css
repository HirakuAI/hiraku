@import 'tailwindcss';

@config '../tailwind.config.js';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}
}

/* Calm slate palette and global square corners */
@layer base {
  /* Neutral slate palette for comfortable contrast */
  :root {
    --color-gray-50: #f8fafc;  /* slate-50 */
    --color-gray-100: #f1f5f9; /* slate-100 */
    --color-gray-200: #e2e8f0; /* slate-200 */
    --color-gray-300: #cbd5e1; /* slate-300 */
    --color-gray-400: #94a3b8; /* slate-400 */
    --color-gray-500: #64748b; /* slate-500 */
    --color-gray-600: #475569; /* slate-600 */
    --color-gray-700: #334155; /* slate-700 */
    --color-gray-800: #1e293b; /* slate-800 */
    --color-gray-850: #111827; /* between 800 and 900 */
    --color-gray-900: #0f172a; /* slate-900 */
    --color-gray-950: #020617; /* slate-950 */

    /* Soft neutral gradients (used sparingly) */
    --gradient-start: #475569; /* slate-600 */
    --gradient-middle: #334155; /* slate-700 */
    --gradient-end: #1e293b;   /* slate-800 */
    --gradient-accent: #94a3b8; /* slate-400 */

    /* App background */
    --app-bg: #f8fafc; /* light */
  }

  /* Dark mode neutrals */
  .dark {
    /* Keep text grays light for contrast on dark background */
    --color-gray-50: #f8fafc;
    --color-gray-100: #f1f5f9;
    --color-gray-200: #e2e8f0;
    --color-gray-300: #cbd5e1;
    --color-gray-400: #94a3b8;
    --color-gray-500: #64748b;
    --color-gray-600: #475569;
    --color-gray-700: #334155;
    --color-gray-800: #0b1220; /* dark bg */
    --color-gray-850: #0a0f1a;
    --color-gray-900: #080d16;
    --color-gray-950: #05070c;

    --gradient-start: #334155; /* slate-700 */
    --gradient-middle: #1f2937; /* slate-800 */
    --gradient-end: #0b1220;   /* dark bg */
    --gradient-accent: #94a3b8; /* lighter accent for contrast */

    --app-bg: #0b1220; /* dark */
  }

  /* Force square corners everywhere */
  *, ::before, ::after, ::file-selector-button {
    border-radius: 0 !important;
  }

  /* Enhanced text contrast for readability */
  body, .text-gray-900 {
    color: var(--color-gray-950) !important;
  }
  
  .dark body, .dark .text-gray-900 {
    color: var(--color-gray-50) !important;
  }
  
  .text-gray-700 {
    color: var(--color-gray-800) !important;
  }
  
  .dark .text-gray-700 {
    color: var(--color-gray-200) !important;
  }
  
  .text-gray-500 {
    color: var(--color-gray-700) !important;
  }
  
  .dark .text-gray-500 {
    color: var(--color-gray-200) !important;
  }

  .text-gray-600 { color: var(--color-gray-800) !important; }
  .dark .text-gray-600 { color: var(--color-gray-300) !important; }

  /* Bump low-contrast utility classes */
  .text-gray-400 { color: var(--color-gray-700) !important; }
  .text-gray-300 { color: var(--color-gray-700) !important; }
  .dark .text-gray-400 { color: var(--color-gray-200) !important; }
  .dark .text-gray-300 { color: var(--color-gray-200) !important; }

  /* Accessible link colors */
  a { color: var(--color-gray-900); }
  .dark a { color: var(--color-gray-50); }

  /* Solid, low-strain background */
  body {
    background: var(--app-bg);
    min-height: 100vh;
  }

  /* High-contrast text selection */
  ::selection {
    background: var(--color-gray-700);
    color: var(--color-gray-50);
  }
  .dark ::selection {
    background: var(--color-gray-300);
    color: var(--color-gray-900);
  }

  /* Placeholder contrast */
  ::placeholder { color: var(--color-gray-600); opacity: 1; }
  .dark ::placeholder { color: var(--color-gray-300); opacity: 1; }

  /* Prose content contrast */
  .prose, .markdown-prose, .input-prose, .input-prose-sm { color: var(--color-gray-900); }
  .dark .prose, .dark .markdown-prose, .dark .input-prose, .dark .input-prose-sm { color: var(--color-gray-50); }

  /* Link states */
  a { color: var(--color-gray-900); }
  a:hover { color: var(--color-gray-700); }
  .dark a { color: var(--color-gray-50); }
  .dark a:hover { color: var(--color-gray-200); }

  /* Glass-morphism effect for main containers */
  .glass-effect {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .dark .glass-effect {
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  /* Subtle neutral overlays (very low opacity) */
  .gradient-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg,
      var(--gradient-start) 0%,
      var(--gradient-middle) 50%,
      var(--gradient-end) 100%);
    opacity: 0.04;
    pointer-events: none;
    animation: gradientShift 8s ease-in-out infinite;
  }

  @keyframes gradientShift {
    0%, 100% { opacity: 0.04; transform: translateX(0%); }
    50% { opacity: 0.07; transform: translateX(6%); }
  }
}

@layer base {
	html,
	pre {
		font-family: 'SF Pro Display', 'Segoe UI Variable', 'Roboto Flex', system-ui, -apple-system, 
			BlinkMacSystemFont, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 
			'Segoe UI Emoji', 'Noto Color Emoji';
	}

	pre {
		white-space: pre-wrap;
	}

	button {
		@apply cursor-pointer;
	}

	input::placeholder,
	textarea::placeholder {
		color: theme(--color-gray-400);
	}
}

@custom-variant hover (&:hover);
